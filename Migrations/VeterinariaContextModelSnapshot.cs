// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Turnos31.Data;

#nullable disable

namespace Turnos31.Migrations
{
    [DbContext(typeof(VeterinariaContext))]
    partial class VeterinariaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Turnos31.Models.Agenda", b =>
                {
                    b.Property<int>("IdAgenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAgenda"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("EsUrgente")
                        .HasColumnType("bit");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHoraFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaHoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMascota")
                        .HasColumnType("int");

                    b.Property<int>("IdVeterinario")
                        .HasColumnType("int");

                    b.Property<int>("MascotaIdMascota")
                        .HasColumnType("int");

                    b.Property<string>("MotivoVisita")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TipoConsulta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VeterinarioIdVeterinario")
                        .HasColumnType("int");

                    b.HasKey("IdAgenda");

                    b.HasIndex("MascotaIdMascota");

                    b.HasIndex("VeterinarioIdVeterinario");

                    b.ToTable("Agendas");
                });

            modelBuilder.Entity("Turnos31.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Turnos31.Models.Consulta", b =>
                {
                    b.Property<int>("IdConsulta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdConsulta"));

                    b.Property<string>("Diagnostico")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("FrecuenciaCardiaca")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("FrecuenciaRespiratoria")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("IdAgenda")
                        .HasColumnType("int");

                    b.Property<int?>("MascotaIdMascota")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal?>("Peso")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("Temperatura")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Tratamiento")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("VeterinarioIdVeterinario")
                        .HasColumnType("int");

                    b.HasKey("IdConsulta");

                    b.HasIndex("IdAgenda");

                    b.HasIndex("MascotaIdMascota");

                    b.HasIndex("VeterinarioIdVeterinario");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("Turnos31.Models.Diagnostico", b =>
                {
                    b.Property<int>("IdDiagnostico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDiagnostico"));

                    b.Property<string>("Detalle")
                        .HasColumnType("varchar(MAX)");

                    b.Property<DateTime?>("FechaDiagnostico")
                        .HasColumnType("date");

                    b.Property<int>("IdConsulta")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IdDiagnostico");

                    b.HasIndex("IdConsulta");

                    b.ToTable("Diagnosticos");
                });

            modelBuilder.Entity("Turnos31.Models.Dueno", b =>
                {
                    b.Property<int>("IdDueno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDueno"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdDueno");

                    b.ToTable("Duenos");
                });

            modelBuilder.Entity("Turnos31.Models.Especialidad", b =>
                {
                    b.Property<int>("IdEspecialidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEspecialidad"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("IdEspecialidad");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("Turnos31.Models.Especie", b =>
                {
                    b.Property<int>("IdEspecie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEspecie"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdEspecie");

                    b.ToTable("Especies");
                });

            modelBuilder.Entity("Turnos31.Models.Examen", b =>
                {
                    b.Property<int>("IdExamen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdExamen"));

                    b.Property<string>("Conjuntival")
                        .HasColumnType("varchar(MAX)");

                    b.Property<int>("IdConsulta")
                        .HasColumnType("int");

                    b.Property<int>("IdMascota")
                        .HasColumnType("int");

                    b.Property<int>("IdVeterinario")
                        .HasColumnType("int");

                    b.Property<string>("Locomocion")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Mucosa")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("NodulosLinfaticos")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Ojos")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Oral")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Piel")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Rectal")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("SistemaCardiovascular")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("SistemaDigestivo")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("SistemaReproductor")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("SistemaRespiratorio")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("SistemaUrinario")
                        .HasColumnType("varchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IdExamen");

                    b.HasIndex("IdConsulta");

                    b.HasIndex("IdMascota");

                    b.HasIndex("IdVeterinario");

                    b.ToTable("Examenes");
                });

            modelBuilder.Entity("Turnos31.Models.FichaIngreso", b =>
                {
                    b.Property<int>("IdFichaIngreso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFichaIngreso"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaHoraIngreso")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDueno")
                        .HasColumnType("int");

                    b.Property<int>("IdMascota")
                        .HasColumnType("int");

                    b.Property<int>("IdMotivoVisita")
                        .HasColumnType("int");

                    b.Property<int>("IdNivelUrgencia")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoServicio")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IdFichaIngreso");

                    b.HasIndex("IdDueno");

                    b.HasIndex("IdMascota");

                    b.HasIndex("IdMotivoVisita");

                    b.HasIndex("IdNivelUrgencia");

                    b.HasIndex("IdTipoServicio");

                    b.ToTable("FichasIngreso");
                });

            modelBuilder.Entity("Turnos31.Models.Login", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoginId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginId");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("Turnos31.Models.Mascota", b =>
                {
                    b.Property<int>("IdMascota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMascota"));

                    b.Property<string>("Alergia")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDueno")
                        .HasColumnType("int");

                    b.Property<int>("IdEspecie")
                        .HasColumnType("int");

                    b.Property<int>("IdRaza")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroMicrochip")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Pelaje")
                        .HasColumnType("varchar(MAX)");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Tamaño")
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdMascota");

                    b.HasIndex("IdDueno");

                    b.HasIndex("IdEspecie");

                    b.HasIndex("IdRaza");

                    b.ToTable("Mascotas");
                });

            modelBuilder.Entity("Turnos31.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Icono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MenuPadreId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenuPadreId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Turnos31.Models.MenuRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RolId");

                    b.ToTable("MenuRoles");
                });

            modelBuilder.Entity("Turnos31.Models.MotivoVisita", b =>
                {
                    b.Property<int>("IdMotivoVisita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMotivoVisita"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMotivoVisita");

                    b.ToTable("MotivoVisitas");
                });

            modelBuilder.Entity("Turnos31.Models.NivelUrgencia", b =>
                {
                    b.Property<int>("IdNivelUrgencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNivelUrgencia"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNivelUrgencia");

                    b.ToTable("NivelUrgencias");
                });

            modelBuilder.Entity("Turnos31.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EstadoProducto")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Foto")
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Proveedor")
                        .HasColumnType("varchar(MAX)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Turnos31.Models.ProductoTratamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdTratamiento")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdTratamiento");

                    b.ToTable("ProductosTratamientos");
                });

            modelBuilder.Entity("Turnos31.Models.Raza", b =>
                {
                    b.Property<int>("IdRaza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRaza"));

                    b.Property<int>("IdEspecie")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdRaza");

                    b.HasIndex("IdEspecie");

                    b.ToTable("Razas");
                });

            modelBuilder.Entity("Turnos31.Models.ResultadoExamen", b =>
                {
                    b.Property<int>("IdResultado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdResultado"));

                    b.Property<DateTime>("FechaRealizacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdConsulta")
                        .HasColumnType("int");

                    b.Property<int>("IdExamen")
                        .HasColumnType("int");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.HasKey("IdResultado");

                    b.HasIndex("IdConsulta");

                    b.HasIndex("IdExamen");

                    b.ToTable("ResultadosExamenes");
                });

            modelBuilder.Entity("Turnos31.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreRol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Turnos31.Models.TipoServicio", b =>
                {
                    b.Property<int>("IdTipoServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoServicio"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoServicio");

                    b.ToTable("TipoServicios");
                });

            modelBuilder.Entity("Turnos31.Models.Tratamiento", b =>
                {
                    b.Property<int>("IdTratamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTratamiento"));

                    b.Property<string>("Detalle")
                        .HasColumnType("varchar(MAX)");

                    b.Property<int>("IdConsulta")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IdTratamiento");

                    b.HasIndex("IdConsulta");

                    b.ToTable("Tratamientos");
                });

            modelBuilder.Entity("Turnos31.Models.Turno", b =>
                {
                    b.Property<int>("IdTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTurno"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("DiaSemana")
                        .HasColumnType("int");

                    b.Property<int>("DuracionConsulta")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time");

                    b.Property<int>("IdVeterinario")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IdTurno");

                    b.HasIndex("IdVeterinario");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("Turnos31.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IdRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Turnos31.Models.Veterinario", b =>
                {
                    b.Property<int>("IdVeterinario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVeterinario"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("HorarioAtencionDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HorarioAtencionHasta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdVeterinario");

                    b.ToTable("Veterinarios");
                });

            modelBuilder.Entity("Turnos31.Models.VeterinarioEspecialidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEspecialidad")
                        .HasColumnType("int");

                    b.Property<int>("IdVeterinario")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEspecialidad");

                    b.HasIndex("IdVeterinario");

                    b.ToTable("VeterinariosEspecialidades");
                });

            modelBuilder.Entity("Turnos31.Models.Agenda", b =>
                {
                    b.HasOne("Turnos31.Models.Mascota", "Mascota")
                        .WithMany("Agendas")
                        .HasForeignKey("MascotaIdMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turnos31.Models.Veterinario", "Veterinario")
                        .WithMany("Agendas")
                        .HasForeignKey("VeterinarioIdVeterinario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("Turnos31.Models.Consulta", b =>
                {
                    b.HasOne("Turnos31.Models.Agenda", "Agenda")
                        .WithMany("Consultas")
                        .HasForeignKey("IdAgenda")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Turnos31.Models.Mascota", null)
                        .WithMany("Consultas")
                        .HasForeignKey("MascotaIdMascota");

                    b.HasOne("Turnos31.Models.Veterinario", null)
                        .WithMany("Consultas")
                        .HasForeignKey("VeterinarioIdVeterinario");

                    b.Navigation("Agenda");
                });

            modelBuilder.Entity("Turnos31.Models.Diagnostico", b =>
                {
                    b.HasOne("Turnos31.Models.Consulta", "Consulta")
                        .WithMany("Diagnosticos")
                        .HasForeignKey("IdConsulta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("Turnos31.Models.Examen", b =>
                {
                    b.HasOne("Turnos31.Models.Consulta", "Consulta")
                        .WithMany("Examenes")
                        .HasForeignKey("IdConsulta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turnos31.Models.Mascota", "Mascota")
                        .WithMany("Examenes")
                        .HasForeignKey("IdMascota")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Turnos31.Models.Veterinario", "Veterinario")
                        .WithMany("Examenes")
                        .HasForeignKey("IdVeterinario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Consulta");

                    b.Navigation("Mascota");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("Turnos31.Models.FichaIngreso", b =>
                {
                    b.HasOne("Turnos31.Models.Dueno", "Dueno")
                        .WithMany()
                        .HasForeignKey("IdDueno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turnos31.Models.Mascota", "Mascota")
                        .WithMany()
                        .HasForeignKey("IdMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turnos31.Models.MotivoVisita", "MotivoVisita")
                        .WithMany()
                        .HasForeignKey("IdMotivoVisita")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turnos31.Models.NivelUrgencia", "NivelUrgencia")
                        .WithMany()
                        .HasForeignKey("IdNivelUrgencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turnos31.Models.TipoServicio", "TipoServicio")
                        .WithMany()
                        .HasForeignKey("IdTipoServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dueno");

                    b.Navigation("Mascota");

                    b.Navigation("MotivoVisita");

                    b.Navigation("NivelUrgencia");

                    b.Navigation("TipoServicio");
                });

            modelBuilder.Entity("Turnos31.Models.Mascota", b =>
                {
                    b.HasOne("Turnos31.Models.Dueno", "Dueno")
                        .WithMany("Mascotas")
                        .HasForeignKey("IdDueno")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Turnos31.Models.Especie", "Especie")
                        .WithMany("Mascotas")
                        .HasForeignKey("IdEspecie")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Turnos31.Models.Raza", "Raza")
                        .WithMany("Mascotas")
                        .HasForeignKey("IdRaza")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Dueno");

                    b.Navigation("Especie");

                    b.Navigation("Raza");
                });

            modelBuilder.Entity("Turnos31.Models.Menu", b =>
                {
                    b.HasOne("Turnos31.Models.Menu", "MenuPadre")
                        .WithMany()
                        .HasForeignKey("MenuPadreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MenuPadre");
                });

            modelBuilder.Entity("Turnos31.Models.MenuRol", b =>
                {
                    b.HasOne("Turnos31.Models.Menu", "Menu")
                        .WithMany("MenuRoles")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turnos31.Models.Rol", "Rol")
                        .WithMany("MenuRoles")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Turnos31.Models.Producto", b =>
                {
                    b.HasOne("Turnos31.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Turnos31.Models.ProductoTratamiento", b =>
                {
                    b.HasOne("Turnos31.Models.Producto", "Producto")
                        .WithMany("ProductosTratamientos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Turnos31.Models.Tratamiento", "Tratamiento")
                        .WithMany("ProductosTratamientos")
                        .HasForeignKey("IdTratamiento")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Tratamiento");
                });

            modelBuilder.Entity("Turnos31.Models.Raza", b =>
                {
                    b.HasOne("Turnos31.Models.Especie", "Especie")
                        .WithMany("Razas")
                        .HasForeignKey("IdEspecie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especie");
                });

            modelBuilder.Entity("Turnos31.Models.ResultadoExamen", b =>
                {
                    b.HasOne("Turnos31.Models.Consulta", "Consulta")
                        .WithMany()
                        .HasForeignKey("IdConsulta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turnos31.Models.Examen", "Examen")
                        .WithMany("Resultados")
                        .HasForeignKey("IdExamen")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Consulta");

                    b.Navigation("Examen");
                });

            modelBuilder.Entity("Turnos31.Models.Tratamiento", b =>
                {
                    b.HasOne("Turnos31.Models.Consulta", "Consulta")
                        .WithMany("Tratamientos")
                        .HasForeignKey("IdConsulta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("Turnos31.Models.Turno", b =>
                {
                    b.HasOne("Turnos31.Models.Veterinario", "Veterinario")
                        .WithMany("Turnos")
                        .HasForeignKey("IdVeterinario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("Turnos31.Models.Usuario", b =>
                {
                    b.HasOne("Turnos31.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Turnos31.Models.VeterinarioEspecialidad", b =>
                {
                    b.HasOne("Turnos31.Models.Especialidad", "Especialidad")
                        .WithMany("Veterinarios")
                        .HasForeignKey("IdEspecialidad")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Turnos31.Models.Veterinario", "Veterinario")
                        .WithMany("Especialidades")
                        .HasForeignKey("IdVeterinario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Especialidad");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("Turnos31.Models.Agenda", b =>
                {
                    b.Navigation("Consultas");
                });

            modelBuilder.Entity("Turnos31.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Turnos31.Models.Consulta", b =>
                {
                    b.Navigation("Diagnosticos");

                    b.Navigation("Examenes");

                    b.Navigation("Tratamientos");
                });

            modelBuilder.Entity("Turnos31.Models.Dueno", b =>
                {
                    b.Navigation("Mascotas");
                });

            modelBuilder.Entity("Turnos31.Models.Especialidad", b =>
                {
                    b.Navigation("Veterinarios");
                });

            modelBuilder.Entity("Turnos31.Models.Especie", b =>
                {
                    b.Navigation("Mascotas");

                    b.Navigation("Razas");
                });

            modelBuilder.Entity("Turnos31.Models.Examen", b =>
                {
                    b.Navigation("Resultados");
                });

            modelBuilder.Entity("Turnos31.Models.Mascota", b =>
                {
                    b.Navigation("Agendas");

                    b.Navigation("Consultas");

                    b.Navigation("Examenes");
                });

            modelBuilder.Entity("Turnos31.Models.Menu", b =>
                {
                    b.Navigation("MenuRoles");
                });

            modelBuilder.Entity("Turnos31.Models.Producto", b =>
                {
                    b.Navigation("ProductosTratamientos");
                });

            modelBuilder.Entity("Turnos31.Models.Raza", b =>
                {
                    b.Navigation("Mascotas");
                });

            modelBuilder.Entity("Turnos31.Models.Rol", b =>
                {
                    b.Navigation("MenuRoles");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Turnos31.Models.Tratamiento", b =>
                {
                    b.Navigation("ProductosTratamientos");
                });

            modelBuilder.Entity("Turnos31.Models.Veterinario", b =>
                {
                    b.Navigation("Agendas");

                    b.Navigation("Consultas");

                    b.Navigation("Especialidades");

                    b.Navigation("Examenes");

                    b.Navigation("Turnos");
                });
#pragma warning restore 612, 618
        }
    }
}
